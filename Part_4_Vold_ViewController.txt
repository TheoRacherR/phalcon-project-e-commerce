Part 4. Dynamiser le contenu avec Volt (controller / moteur de template)

Volt est un moteur de template, très similaire à twig, écrit en C adapté pour de l'utilisation en PHP.
Il est très insipéré de Jinja, qui est un moteur de template lui pour du Python. 
Il en reprend la même synthaxe mais avec des fonctionnalités orientées PHP comme ...
Il peut être utiliser avec de manière indépendante dans d'autres applications, mais ici nous allons l'utiliser avec Phalcon.
Volt est compilé en pure PHP, ce qui le rend principalement compatible avec des framework PHP et donc avec Phalcon.
La sythaxe se présente comme ceci :

    {% extends 'templates/index.volt' %}

    {% block title %} Page d'index {% endblock %}

    {% block body %}
    
        <h1>Voici la page d'index</h1>

        <ul>
        
            <li>Accueil</li>
            <li>Page produit</li>
            <li>Documentation</li>
        
        </ul>

    {% endblock %}

Comment on peut le voir, la synthaxe de Volt utilise un mélange de PHP



Views : interface utilisateur de l'app / execute des taches pour afficher les données
Back <-> Views <-> Browser



Pour générer les controller, et comme dans la partie des Models, nous allons utiliser Phalcon DevTools.
La commande pour générer un controller est :

    docker-compose exec app phalcon create-model --name Product


Pour effectuer la génération du MVC en une seule commande, je recommande d'utiliser la suivant :

    docker-compose exec app phalcon scaffold --table-name Product


Autre façons d'utiliser Phalcon DevTools :

https://vimeo.com/42367665

https://youtu.be/UbUx_6Cs6r4











-	Extensions d’un autre fichier template ( {% extends ‘template/file.volt’ %}
-	Blocks ( {% bloc test %} {% endblock %} )
-	Boucle ( {% for t in test %} {% endif %} )
-	Filtre ( « pipe » |)
-   Syntax de délimitation {% ... %} > executer des / {{ ... }} > executer des expressions


? : 
-   {{ partial () }}
-   {{ content() }}